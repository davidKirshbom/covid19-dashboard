[{"C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\index.js":"1","C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\router\\router.js":"2","C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\router\\history.js":"3","C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\context\\ThemeContext.js":"4","C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\components\\Navigationbar.js":"5","C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\components\\Menu.js":"6","C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\components\\MainPage.js":"7","C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\server\\data.js":"8","C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\components\\charts\\respiratoryChart.js":"9","C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\charts\\makeChart.js":"10","C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\components\\charts\\DeathsChart.js":"11","C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\components\\charts\\PositiveTestsChart.js":"12"},{"size":209,"mtime":1609488966900,"results":"13","hashOfConfig":"14"},{"size":1134,"mtime":1609485722974,"results":"15","hashOfConfig":"14"},{"size":89,"mtime":1609428591733,"results":"16","hashOfConfig":"14"},{"size":72,"mtime":1609431220869,"results":"17","hashOfConfig":"14"},{"size":1297,"mtime":1609702386009,"results":"18","hashOfConfig":"14"},{"size":1742,"mtime":1609443338398,"results":"19","hashOfConfig":"14"},{"size":7925,"mtime":1609788540883,"results":"20","hashOfConfig":"14"},{"size":402,"mtime":1609500625391,"results":"21","hashOfConfig":"14"},{"size":1692,"mtime":1609690492736,"results":"22","hashOfConfig":"14"},{"size":3036,"mtime":1609690697410,"results":"23","hashOfConfig":"14"},{"size":1519,"mtime":1609695041928,"results":"24","hashOfConfig":"14"},{"size":1462,"mtime":1609696124736,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"g6dbgh",{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"28"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"28"},"C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\index.js",[],["58","59"],"C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\router\\router.js",["60","61"],"import React from 'react'\r\nimport { Link, Switch, Route, Router } from \"react-router-dom\";\r\nimport ThemeContext from '../context/ThemeContext'\r\nimport {useState}from 'react'\r\nimport history from './history'\r\nimport MainPage from '../components/MainPage'\r\nimport Navigationbar from '../components/Navigationbar'\r\nimport Menu from '../components/Menu'\r\nimport '../styles/style.scss'\r\n\r\nexport default () => {\r\nconst [isThemeWhite,setIsThemeWhite]=useState(true)\r\nconst [isMenuOpen,setIsMenuOpen]=useState(false)\r\n    return (\r\n<ThemeContext.Provider value={{isThemeWhite,setIsThemeWhite}}>\r\n    <Router history={history}>\r\n        <header>\r\n                    <Navigationbar isMenuOpen={isMenuOpen} onClickBurgerButton={() => { console.log(\"click\");setIsMenuOpen(!isMenuOpen)}}/>\r\n        </header>\r\n                <section className=\"main-section\">\r\n               \r\n                    <Menu setIsOpen={setIsMenuOpen} isOpen={isMenuOpen}></Menu>\r\n                    <Switch>\r\n                <Route path=\"/\" exact component={MainPage} />\r\n            </Switch>   \r\n        </section>\r\n    </Router>\r\n</ThemeContext.Provider >\r\n)\r\n}","C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\router\\history.js",[],"C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\context\\ThemeContext.js",[],"C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\components\\Navigationbar.js",["62","63"],"import React,{useContext} from 'react'\r\nimport themeContext from '../context/ThemeContext'\r\nimport logo from '../images/logo_dashboard.png'\r\nexport default ({onClickBurgerButton,isMenuOpen}) => {\r\n    const { isThemeWhite, setIsThemeWhite } = useContext(themeContext)\r\n    \r\n    return (\r\n        <div className=\"navigation-container\">\r\n        \r\n        <div className=\"right-side-container\">\r\n            <div className={`burger-button ${isMenuOpen?'open':''}`} onClick={onClickBurgerButton}>\r\n            <div id=\"burger-line-1\" className=\"burger-btn-line\"></div>\r\n            <div id=\"burger-line-2\" className=\"burger-btn-line\"></div>\r\n            <div id=\"burger-line-3\" className=\"burger-btn-line\"></div>\r\n            </div>\r\n            <img className=\"logo\" src={logo}></img>\r\n        </div>\r\n        <div className=\"left-side-container\">\r\n        \r\n        <div className=\"title-container\">\r\n            <span className=\"title\">נגיף הקורונה בישראל - תמונת מצב כללית</span>\r\n            <span className=\"subtitle\">עדכון אחרון: 31 בדצמבר 2020 | 10:25</span>\r\n        </div>\r\n        <button className=\"rounded-button theme-button\" onClick={()=>setIsThemeWhite(!isThemeWhite)}>לתצוגה נגישה</button>\r\n        </div>\r\n        </div>)\r\n}","C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\components\\Menu.js",["64","65","66","67","68"],"import React,{useState} from 'react'\r\n\r\n\r\nexport default ({ isOpen,setIsOpen }) => {\r\n    const [selectedLink, setSelectedLink] = useState(1);\r\n    return (\r\n        <div className={`menu-container ${isOpen?\"open\":\"close\"}`}>\r\n            <div className=\"navigator-container\">\r\n                <a onClick={()=>{setIsOpen(false);setSelectedLink(1)}} className={`menu-link ${selectedLink===1?\"selected\":\"\"}`}>\r\n                    <span >\r\n                        <svg  width=\"24px\" height=\"25px\" viewBox=\"0 0 24 25\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" >\r\n                <g id=\"Page-1\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\r\n                    <g id=\"עומסים\" transform=\"translate(-1388.000000, -158.000000)\" stroke=\"currentColor\" stroke-width=\"2\">\r\n                        <path d=\"M1398,171.5 L1398,182 L1389,182 L1389,171.5 L1398,171.5 Z M1411,174 L1411,182 L1402.5,182 L1402.5,174 L1411,174 Z M1411,159 L1411,169.5 L1402.5,169.5 L1402.5,159 L1411,159 Z M1398,159 L1398,167 L1389,167 L1389,159 L1398,159 Z\" id=\"Combined-Shape\"></path>\r\n                    </g>\r\n                </g>\r\n                        </svg>\r\n                    </span>\r\n                    מצב כללי\r\n                </a>\r\n                <a onClick={()=>{setIsOpen(false);setSelectedLink(2)}} className={`menu-link ${selectedLink===2?\"selected\":\"\"}`}>אודות</a>\r\n                <a onClick={()=>{setIsOpen(false);setSelectedLink(3)}} className={`menu-link ${selectedLink===3?\"selected\":\"\"}`}>תנאי שימוש</a>\r\n                <a onClick={()=>{setIsOpen(false);setSelectedLink(4)}} className={`menu-link ${selectedLink===4?\"selected\":\"\"}`}>מדריך למשתמש</a>\r\n            </div>\r\n    </div>)\r\n}","C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\components\\MainPage.js",["69","70","71"],"C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\server\\data.js",[],"C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\components\\charts\\respiratoryChart.js",["72","73","74"],"import React, { useEffect } from 'react'\r\nimport moment from 'moment'\r\nimport { getGeneralStatics } from '../../server/data'\r\nimport respiratoryChart from '../../charts/makeChart'\r\n\r\nexport default ({ isOpen, data }) => {\r\n    const getChartLineData = (people) => {\r\n        let day = moment('02/03/2020','DD/MM/YYYY');\r\n        const end = moment().clone();\r\n        const result = [];\r\n        while (day.isSameOrBefore(end)) {\r\n          \r\n          let count = 0;\r\n          people.forEach(person => {      \r\n            if (person.statuses.some((status) => { \r\n              \r\n              return status.isRespiratory&&(moment(status.createdAt).isSameOrBefore(day) && (!status.end_date || moment(status.end_date).isSameOrAfter(day)))\r\n            }))\r\n            {\r\n              count++;\r\n            }\r\n          });\r\n          result.push({ x: day.clone().format('D.M').toString(), y:count });\r\n          day.add('1','day')\r\n        }\r\n        return result\r\n        \r\n      }\r\n    useEffect(() => {                \r\n            if(isOpen)\r\n                respiratoryChart('respiratory-chart',getChartLineData(data),{xTitle:'תאריך',yTitle:'כמות מונשמים',chartTitle:'מונשמים',toolTipPostfix:'מונשמים'})\r\n            else \r\n                respiratoryChart('respiratory-chart', [],{xTitle:'תאריך',yTitle:'כמות מונשמים',chartTitle:'מונשמים',toolTipPostfix:'מונשמים'})\r\n          \r\n            \r\n        \r\n    }, [isOpen])\r\n\r\n    \r\n\r\n    \r\n\r\n\r\n    return (\r\n    <div id=\"respiratory-chart-container\" className={`small-chart-container ${isOpen ? 'open' : ''}`}>\r\n    <canvas id=\"respiratory-chart\" ></canvas>\r\n    </div>)\r\n\r\n}","C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\charts\\makeChart.js",["75","76"],"\r\nimport Chart from 'chart.js'\r\n\r\n\r\nexport default (containerName, data, { xTitle, yTitle, chartTitle, toolTipPostfix } = {}) => {\r\n  let ctx = document.getElementById(containerName);\r\n  let gradient = ctx.getContext('2d').createLinearGradient(0, 0, 0, 500);\r\n  gradient.addColorStop(0, 'rgba(83, 204, 253, 1)');\r\n  gradient.addColorStop(0.25, 'rgba(204, 243, 246, 0.5)');\r\n  gradient.addColorStop(1, 'rgba(0, 0, 0, 0)');\r\n  const lineArray = data\r\n  var myChart = new Chart(ctx, {\r\n\r\n    type: 'line',\r\n    data: {\r\n        \r\n        datasets: [{\r\n          label: {\r\n              \r\n            },\r\n          data:data.length>0? lineArray.map(data=>data.y):undefined,\r\n            \r\n            backgroundColor: \r\n                gradient\r\n            ,\r\n            borderColor: \r\n                '#53ccfd'\r\n              ,\r\n          borderWidth: 5,\r\n          pointRadius: 0,\r\n          \r\n        }]\r\n    },\r\n    options: {\r\n      responsive: true,\r\n      maintainAspectRatio: false,\r\n      title: {\r\n        display:true,\r\n        text:chartTitle||'',\r\n   \r\n        \r\n      },\r\n      legend: {\r\n        \r\n          display:false,\r\n      },\r\n      scales: {\r\n        xAxes: [{\r\n          labels: lineArray.map(data => data.x),\r\n          scaleLabel: {\r\n            display: true,\r\n            labelString: xTitle||'',\r\n            fontSize:15,\r\n          },\r\n          ticks: {\r\n            maxTicksLimit: 5,\r\n            beginAtZero: true,\r\n            \r\n          }}],\r\n        yAxes: [{\r\n          labels: lineArray.map(data => data.y),\r\n          scaleLabel: {\r\n            display: true,\r\n            labelString: yTitle||'',\r\n            fontSize:15,\r\n          },\r\n                ticks: {\r\n                  \r\n                  maxTicksLimit: 5,\r\n                }\r\n            }]\r\n      },\r\n      tooltips: {\r\n        displayColors: false,\r\n        backgroundColor: 'white',\r\n        bodyFontColor: '#53ccfd',\r\n        titleFontColor: '#53ccfd',\r\n        titleAlign:'center',\r\n        callbacks: {\r\n          title: function (item) {\r\n            return item[0].label\r\n          },\r\n          label: function (item) {\r\n           \r\n            return item.value+ (toolTipPostfix||'');\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n});\r\n}\r\n\r\n\r\n//highcharts\r\n// export default (containerName, data) => {\r\n  \r\n//     const dates = getXDates();\r\n//     const lineArray=getChartLineData(data)\r\n//   highCharts.chart(containerName, {\r\n//     chart: {\r\n//       type: 'areaspline',\r\n     \r\n//     },\r\n//     title: {\r\n//       text: 'מונשמים - שינוי יומי'\r\n//     },\r\n   \r\n//     xAxis: {\r\n//       type: 'category',\r\n//   startOnTick:true,\r\n//       categories: lineArray.map(data => data[0]),\r\n      \r\n     \r\n//       labels: {\r\n//         autoRotation:0,\r\n//         padding:105+\"px\",\r\n   \r\n     \r\n        \r\n//       }\r\n//     },\r\n//     credits:false,\r\n//     series: [\r\n//       {\r\n//         name: '',\r\n//         data: lineArray,\r\n//         color:highCharts.getOptions().colors[0]\r\n//     }]\r\n// })\r\n// }","C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\components\\charts\\DeathsChart.js",["77","78","79","80"],"import React, { useEffect } from 'react'\r\nimport moment from 'moment';\r\nimport { getGeneralStatics } from '../../server/data'\r\nimport respiratoryChart from '../../charts/makeChart'\r\n\r\nexport default ({ isOpen,data }) => {\r\n    useEffect(() => {\r\n            if(isOpen)\r\n                respiratoryChart('deaths-chart', getChartLineData(data),{xTitle:'תאריך',yTitle:'כמות נפטרים',chartTitle:'נפטרים - שינוי יומי', toolTipPostfix:'נפטרים'})\r\n            else \r\n            respiratoryChart('deaths-chart', [])\r\n        \r\n    }, [isOpen])\r\n    const getChartLineData = (people) => {\r\n        let day = moment('02/03/2020','DD/MM/YYYY');\r\n        const end = moment().clone();\r\n        const result = [];\r\n        let count = 0;\r\n    \r\n        while (day.isSameOrBefore(end)) {         \r\n          people.forEach(person => {      \r\n            if (person.statuses.some((status) => { \r\n              \r\n               \r\n                return status.name === 'נפטר' && (moment(status.createdAt).startOf('day').isSame(day.startOf('day')))\r\n          \r\n            }))\r\n            {\r\n              count++;\r\n            }\r\n          });\r\n          result.push({ x: day.clone().format('D.M').toString(), y:count });\r\n          day.add('1','day')\r\n        }\r\n        return result   \r\n      }\r\n    \r\n\r\n    \r\n\r\n\r\n    return (\r\n    <div id=\"respiratory-chart-container\" className={`small-chart-container ${isOpen ? 'open' : ''}`}>\r\n    <canvas id=\"deaths-chart\" ></canvas>\r\n    </div>)\r\n\r\n}","C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\components\\charts\\PositiveTestsChart.js",["81","82"],"import React, { useEffect } from 'react'\r\nimport moment from 'moment';\r\n\r\nimport respiratoryChart from '../../charts/makeChart'\r\n\r\nexport default ({ isOpen,data }) => {\r\n    useEffect(() => {\r\n            if(isOpen)\r\n                respiratoryChart('Positive-test-chart', getChartLineData(data),{xTitle:'תאריך',yTitle:'מספר בדיקות יומיות',chartTitle:'בדיקות - מגמת שינוי יומית',toolTipPostfix:'בדיקות'})\r\n            else \r\n            respiratoryChart('Positive-test-chart', [])\r\n        \r\n    }, [isOpen])\r\n    const getChartLineData = (people) => {\r\n        let day = moment('01/01/2020','DD/MM/YYYY');\r\n        const end = moment().clone();\r\n        const result = [];\r\n      \r\n        while (day.isSameOrBefore(end)) {  \r\n            let count = 0;\r\n          people.forEach(person => {      \r\n            person.statuses.forEach((status) => { \r\n              \r\n                if ((moment(status.createdAt).startOf('day').isSame(day.startOf('day')) && status.name === 'נבדק'))\r\n                    count++;\r\n            })\r\n          });\r\n        \r\n          result.push({ x: day.clone().format('D.M').toString(), y:count });\r\n          day.add('1','day')\r\n        }\r\n        return result   \r\n      }\r\n    \r\n\r\n    \r\n\r\n\r\n    return (\r\n    <div id=\"respiratory-chart-container\" className={`small-chart-container ${isOpen ? 'open' : ''}`}>\r\n    <canvas id=\"Positive-test-chart\" ></canvas>\r\n    </div>)\r\n\r\n}",{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":2,"column":10,"nodeType":"89","messageId":"90","endLine":2,"endColumn":14},{"ruleId":"91","severity":1,"message":"92","line":11,"column":1,"nodeType":"93","endLine":30,"endColumn":2},{"ruleId":"91","severity":1,"message":"92","line":4,"column":1,"nodeType":"93","endLine":27,"endColumn":2},{"ruleId":"94","severity":1,"message":"95","line":16,"column":13,"nodeType":"96","endLine":16,"endColumn":46},{"ruleId":"91","severity":1,"message":"92","line":4,"column":1,"nodeType":"93","endLine":26,"endColumn":2},{"ruleId":"97","severity":1,"message":"98","line":9,"column":17,"nodeType":"96","endLine":9,"endColumn":130},{"ruleId":"97","severity":1,"message":"98","line":21,"column":17,"nodeType":"96","endLine":21,"endColumn":130},{"ruleId":"97","severity":1,"message":"98","line":22,"column":17,"nodeType":"96","endLine":22,"endColumn":130},{"ruleId":"97","severity":1,"message":"98","line":23,"column":17,"nodeType":"96","endLine":23,"endColumn":130},{"ruleId":"87","severity":1,"message":"99","line":1,"column":8,"nodeType":"89","messageId":"90","endLine":1,"endColumn":20},{"ruleId":"87","severity":1,"message":"100","line":2,"column":17,"nodeType":"89","messageId":"90","endLine":2,"endColumn":27},{"ruleId":"91","severity":1,"message":"92","line":7,"column":1,"nodeType":"93","endLine":120,"endColumn":2},{"ruleId":"87","severity":1,"message":"101","line":3,"column":10,"nodeType":"89","messageId":"90","endLine":3,"endColumn":27},{"ruleId":"91","severity":1,"message":"92","line":6,"column":1,"nodeType":"93","endLine":49,"endColumn":2},{"ruleId":"102","severity":1,"message":"103","line":37,"column":8,"nodeType":"104","endLine":37,"endColumn":16,"suggestions":"105"},{"ruleId":"91","severity":1,"message":"92","line":5,"column":1,"nodeType":"93","endLine":92,"endColumn":2},{"ruleId":"87","severity":1,"message":"106","line":12,"column":7,"nodeType":"89","messageId":"90","endLine":12,"endColumn":14},{"ruleId":"87","severity":1,"message":"101","line":3,"column":10,"nodeType":"89","messageId":"90","endLine":3,"endColumn":27},{"ruleId":"91","severity":1,"message":"92","line":6,"column":1,"nodeType":"93","endLine":47,"endColumn":2},{"ruleId":"102","severity":1,"message":"103","line":13,"column":8,"nodeType":"104","endLine":13,"endColumn":16,"suggestions":"107"},{"ruleId":"108","severity":1,"message":"109","line":21,"column":26,"nodeType":"110","messageId":"111","endLine":31,"endColumn":12},{"ruleId":"91","severity":1,"message":"92","line":6,"column":1,"nodeType":"93","endLine":44,"endColumn":2},{"ruleId":"102","severity":1,"message":"103","line":13,"column":8,"nodeType":"104","endLine":13,"endColumn":16,"suggestions":"112"},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'themeContext' is defined but never used.","'useContext' is defined but never used.","'getGeneralStatics' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.","ArrayExpression",["115"],"'myChart' is assigned a value but never used.",["116"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'count'.","ArrowFunctionExpression","unsafeRefs",["117"],"no-global-assign","no-unsafe-negation",{"desc":"118","fix":"119"},{"desc":"118","fix":"120"},{"desc":"118","fix":"121"},"Update the dependencies array to be: [data, isOpen]",{"range":"122","text":"123"},{"range":"124","text":"123"},{"range":"125","text":"123"},[1420,1428],"[data, isOpen]",[430,438],[499,507]]