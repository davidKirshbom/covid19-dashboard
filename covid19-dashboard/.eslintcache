[{"C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\index.js":"1","C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\router\\router.js":"2","C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\router\\history.js":"3","C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\context\\ThemeContext.js":"4","C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\components\\Navigationbar.js":"5","C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\components\\Menu.js":"6","C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\components\\MainPage.js":"7","C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\server\\data.js":"8","C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\components\\charts\\respiratoryChart.js":"9","C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\charts\\makeChart.js":"10","C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\components\\charts\\DeathsChart.js":"11","C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\components\\charts\\PositiveTestsChart.js":"12","C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\components\\StaticsRow.js":"13","C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\components\\charts\\VerifiedAvgWeekly.js":"14","C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\components\\charts\\SeriouslyIllWeek.js":"15","C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\components\\charts\\VerifiedOutSideRedZone.js":"16","C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\components\\WeeklyCharts.js":"17","C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\components\\LookupTag.js":"18","C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\components\\charts\\EpidemicCurveChart.js":"19","C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\components\\CustomSelect.js":"20","C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\components\\charts\\SeriouslyIllChart.js":"21","C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\components\\CitiesByColor.js":"22"},{"size":209,"mtime":1609488966900,"results":"23","hashOfConfig":"24"},{"size":1134,"mtime":1609485722974,"results":"25","hashOfConfig":"24"},{"size":89,"mtime":1609428591733,"results":"26","hashOfConfig":"24"},{"size":72,"mtime":1609431220869,"results":"27","hashOfConfig":"24"},{"size":1297,"mtime":1609702386009,"results":"28","hashOfConfig":"24"},{"size":1742,"mtime":1609443338398,"results":"29","hashOfConfig":"24"},{"size":862,"mtime":1610123043188,"results":"30","hashOfConfig":"24"},{"size":2825,"mtime":1610104778226,"results":"31","hashOfConfig":"24"},{"size":1692,"mtime":1609690492736,"results":"32","hashOfConfig":"24"},{"size":3706,"mtime":1609872503214,"results":"33","hashOfConfig":"24"},{"size":1519,"mtime":1609695041928,"results":"34","hashOfConfig":"24"},{"size":1462,"mtime":1609696124736,"results":"35","hashOfConfig":"24"},{"size":8315,"mtime":1609864723486,"results":"36","hashOfConfig":"24"},{"size":5354,"mtime":1609949512560,"results":"37","hashOfConfig":"24"},{"size":4934,"mtime":1609949512560,"results":"38","hashOfConfig":"24"},{"size":4079,"mtime":1609949512560,"results":"39","hashOfConfig":"24"},{"size":1439,"mtime":1610036723258,"results":"40","hashOfConfig":"24"},{"size":269,"mtime":1610036582929,"results":"41","hashOfConfig":"24"},{"size":8140,"mtime":1610099327929,"results":"42","hashOfConfig":"24"},{"size":1149,"mtime":1610093720836,"results":"43","hashOfConfig":"24"},{"size":8006,"mtime":1610104843286,"results":"44","hashOfConfig":"24"},{"size":3439,"mtime":1610128425946,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"g6dbgh",{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"48"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"48"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"48"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"48"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\index.js",[],["107","108"],"C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\router\\router.js",["109","110"],"import React from 'react'\r\nimport { Link, Switch, Route, Router } from \"react-router-dom\";\r\nimport ThemeContext from '../context/ThemeContext'\r\nimport {useState}from 'react'\r\nimport history from './history'\r\nimport MainPage from '../components/MainPage'\r\nimport Navigationbar from '../components/Navigationbar'\r\nimport Menu from '../components/Menu'\r\nimport '../styles/style.scss'\r\n\r\nexport default () => {\r\nconst [isThemeWhite,setIsThemeWhite]=useState(true)\r\nconst [isMenuOpen,setIsMenuOpen]=useState(false)\r\n    return (\r\n<ThemeContext.Provider value={{isThemeWhite,setIsThemeWhite}}>\r\n    <Router history={history}>\r\n        <header>\r\n                    <Navigationbar isMenuOpen={isMenuOpen} onClickBurgerButton={() => { console.log(\"click\");setIsMenuOpen(!isMenuOpen)}}/>\r\n        </header>\r\n                <section className=\"main-section\">\r\n               \r\n                    <Menu setIsOpen={setIsMenuOpen} isOpen={isMenuOpen}></Menu>\r\n                    <Switch>\r\n                <Route path=\"/\" exact component={MainPage} />\r\n            </Switch>   \r\n        </section>\r\n    </Router>\r\n</ThemeContext.Provider >\r\n)\r\n}","C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\router\\history.js",[],"C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\context\\ThemeContext.js",[],"C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\components\\Navigationbar.js",["111","112"],"import React,{useContext} from 'react'\r\nimport themeContext from '../context/ThemeContext'\r\nimport logo from '../images/logo_dashboard.png'\r\nexport default ({onClickBurgerButton,isMenuOpen}) => {\r\n    const { isThemeWhite, setIsThemeWhite } = useContext(themeContext)\r\n    \r\n    return (\r\n        <div className=\"navigation-container\">\r\n        \r\n        <div className=\"right-side-container\">\r\n            <div className={`burger-button ${isMenuOpen?'open':''}`} onClick={onClickBurgerButton}>\r\n            <div id=\"burger-line-1\" className=\"burger-btn-line\"></div>\r\n            <div id=\"burger-line-2\" className=\"burger-btn-line\"></div>\r\n            <div id=\"burger-line-3\" className=\"burger-btn-line\"></div>\r\n            </div>\r\n            <img className=\"logo\" src={logo}></img>\r\n        </div>\r\n        <div className=\"left-side-container\">\r\n        \r\n        <div className=\"title-container\">\r\n            <span className=\"title\">נגיף הקורונה בישראל - תמונת מצב כללית</span>\r\n            <span className=\"subtitle\">עדכון אחרון: 31 בדצמבר 2020 | 10:25</span>\r\n        </div>\r\n        <button className=\"rounded-button theme-button\" onClick={()=>setIsThemeWhite(!isThemeWhite)}>לתצוגה נגישה</button>\r\n        </div>\r\n        </div>)\r\n}","C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\components\\Menu.js",["113","114","115","116","117"],"import React,{useState} from 'react'\r\n\r\n\r\nexport default ({ isOpen,setIsOpen }) => {\r\n    const [selectedLink, setSelectedLink] = useState(1);\r\n    return (\r\n        <div className={`menu-container ${isOpen?\"open\":\"close\"}`}>\r\n            <div className=\"navigator-container\">\r\n                <a onClick={()=>{setIsOpen(false);setSelectedLink(1)}} className={`menu-link ${selectedLink===1?\"selected\":\"\"}`}>\r\n                    <span >\r\n                        <svg  width=\"24px\" height=\"25px\" viewBox=\"0 0 24 25\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" >\r\n                <g id=\"Page-1\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\r\n                    <g id=\"עומסים\" transform=\"translate(-1388.000000, -158.000000)\" stroke=\"currentColor\" stroke-width=\"2\">\r\n                        <path d=\"M1398,171.5 L1398,182 L1389,182 L1389,171.5 L1398,171.5 Z M1411,174 L1411,182 L1402.5,182 L1402.5,174 L1411,174 Z M1411,159 L1411,169.5 L1402.5,169.5 L1402.5,159 L1411,159 Z M1398,159 L1398,167 L1389,167 L1389,159 L1398,159 Z\" id=\"Combined-Shape\"></path>\r\n                    </g>\r\n                </g>\r\n                        </svg>\r\n                    </span>\r\n                    מצב כללי\r\n                </a>\r\n                <a onClick={()=>{setIsOpen(false);setSelectedLink(2)}} className={`menu-link ${selectedLink===2?\"selected\":\"\"}`}>אודות</a>\r\n                <a onClick={()=>{setIsOpen(false);setSelectedLink(3)}} className={`menu-link ${selectedLink===3?\"selected\":\"\"}`}>תנאי שימוש</a>\r\n                <a onClick={()=>{setIsOpen(false);setSelectedLink(4)}} className={`menu-link ${selectedLink===4?\"selected\":\"\"}`}>מדריך למשתמש</a>\r\n            </div>\r\n    </div>)\r\n}","C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\components\\MainPage.js",["118","119","120","121","122","123","124","125","126"],"C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\server\\data.js",[],"C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\components\\charts\\respiratoryChart.js",["127","128","129"],"import React, { useEffect } from 'react'\r\nimport moment from 'moment'\r\nimport { getGeneralStatics } from '../../server/data'\r\nimport respiratoryChart from '../../charts/makeChart'\r\n\r\nexport default ({ isOpen, data }) => {\r\n    const getChartLineData = (people) => {\r\n        let day = moment('02/03/2020','DD/MM/YYYY');\r\n        const end = moment().clone();\r\n        const result = [];\r\n        while (day.isSameOrBefore(end)) {\r\n          \r\n          let count = 0;\r\n          people.forEach(person => {      \r\n            if (person.statuses.some((status) => { \r\n              \r\n              return status.isRespiratory&&(moment(status.createdAt).isSameOrBefore(day) && (!status.end_date || moment(status.end_date).isSameOrAfter(day)))\r\n            }))\r\n            {\r\n              count++;\r\n            }\r\n          });\r\n          result.push({ x: day.clone().format('D.M').toString(), y:count });\r\n          day.add('1','day')\r\n        }\r\n        return result\r\n        \r\n      }\r\n    useEffect(() => {                \r\n            if(isOpen)\r\n                respiratoryChart('respiratory-chart',getChartLineData(data),{xTitle:'תאריך',yTitle:'כמות מונשמים',chartTitle:'מונשמים',toolTipPostfix:'מונשמים'})\r\n            else \r\n                respiratoryChart('respiratory-chart', [],{xTitle:'תאריך',yTitle:'כמות מונשמים',chartTitle:'מונשמים',toolTipPostfix:'מונשמים'})\r\n          \r\n            \r\n        \r\n    }, [isOpen])\r\n\r\n    \r\n\r\n    \r\n\r\n\r\n    return (\r\n    <div id=\"respiratory-chart-container\" className={`small-chart-container ${isOpen ? 'open' : ''}`}>\r\n    <canvas id=\"respiratory-chart\" ></canvas>\r\n    </div>)\r\n\r\n}","C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\charts\\makeChart.js",["130","131"],"\r\nimport Chart from 'chart.js'\r\n\r\nconst getLimitedTicks=(ticks)=> {\r\n  const skipParameter = Math.floor(ticks.length / 5);\r\n  return [ticks[0], ticks[skipParameter], ticks[skipParameter * 2], ticks[skipParameter * 3], ticks[skipParameter * 4]]\r\n}\r\n\r\nexport default (containerName, data, { xTitle, yTitle, chartTitle, toolTipPostfix } = {}) => {\r\n  let ctx = document.getElementById(containerName);\r\n  let gradient = ctx.getContext('2d').createLinearGradient(0, 0, 0, 500);\r\n  let xTicks=getLimitedTicks(data.map(data=>data.x))\r\n  gradient.addColorStop(0, 'rgba(83, 204, 253, 1)');\r\n  gradient.addColorStop(0.25, 'rgba(204, 243, 246, 0.5)');\r\n  gradient.addColorStop(1, 'rgba(0, 0, 0, 0)');\r\n  const lineArray = data\r\n  var myChart = new Chart(ctx, {\r\n\r\n    type: 'line',\r\n    data: {\r\n        \r\n        datasets: [{\r\n          label: {\r\n              \r\n            },\r\n          data:data.length>0? lineArray.map(data=>data.y):undefined,\r\n            \r\n            backgroundColor: \r\n                gradient\r\n            ,\r\n            borderColor: \r\n                '#53ccfd'\r\n              ,\r\n          borderWidth: 5,\r\n          pointRadius: 0,\r\n          \r\n      },\r\n        {\r\n        type:'bubble',\r\n        label: {\r\n            \r\n          },\r\n        data:data.length>0? lineArray.filter(data=>!xTicks.includes(data.x)).map(data=>data.y):undefined,\r\n          \r\n          backgroundColor: \r\n              gradient\r\n          ,\r\n          borderColor: \r\n              '#53ccfd'\r\n            ,\r\n        borderWidth: 5,\r\n        pointRadius: 0,\r\n        \r\n      }\r\n      ]\r\n    },\r\n    options: {\r\n      responsive: true,\r\n      maintainAspectRatio: false,\r\n      title: {\r\n        display:true,\r\n        text:chartTitle||'',\r\n   \r\n        \r\n      },\r\n      legend: {\r\n        \r\n          display:false,\r\n      },\r\n      scales: {\r\n        \r\n        xAxes: [{\r\n          afterBuildTicks() {            \r\n            return xTicks\r\n          },\r\n          labels: lineArray.map(data => data.x),\r\n          scaleLabel: {\r\n            display: true,\r\n            labelString: xTitle||'',\r\n            fontSize:15,\r\n          },\r\n         }],\r\n        yAxes: [{\r\n          labels: lineArray.map(data => data.y),\r\n          scaleLabel: {\r\n            display: true,\r\n            labelString: yTitle||'',\r\n            fontSize:15,\r\n          },\r\n                ticks: {\r\n                  \r\n                  maxTicksLimit: 5,\r\n                }\r\n            }]\r\n      },\r\n      tooltips: {\r\n        displayColors: false,\r\n        backgroundColor: 'white',\r\n        bodyFontColor: '#53ccfd',\r\n        titleFontColor: '#53ccfd',\r\n        titleAlign:'center',\r\n        callbacks: {\r\n          title: function (item) {\r\n            return item[0].label\r\n          },\r\n          label: function (item) {\r\n           \r\n            return item.value+ (toolTipPostfix||'');\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n});\r\n}\r\n\r\n\r\n//highcharts\r\n// export default (containerName, data) => {\r\n  \r\n//     const dates = getXDates();\r\n//     const lineArray=getChartLineData(data)\r\n//   highCharts.chart(containerName, {\r\n//     chart: {\r\n//       type: 'areaspline',\r\n     \r\n//     },\r\n//     title: {\r\n//       text: 'מונשמים - שינוי יומי'\r\n//     },\r\n   \r\n//     xAxis: {\r\n//       type: 'category',\r\n//   startOnTick:true,\r\n//       categories: lineArray.map(data => data[0]),\r\n      \r\n     \r\n//       labels: {\r\n//         autoRotation:0,\r\n//         padding:105+\"px\",\r\n   \r\n     \r\n        \r\n//       }\r\n//     },\r\n//     credits:false,\r\n//     series: [\r\n//       {\r\n//         name: '',\r\n//         data: lineArray,\r\n//         color:highCharts.getOptions().colors[0]\r\n//     }]\r\n// })\r\n// }","C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\components\\charts\\DeathsChart.js",["132","133","134","135"],"import React, { useEffect } from 'react'\r\nimport moment from 'moment';\r\nimport { getGeneralStatics } from '../../server/data'\r\nimport respiratoryChart from '../../charts/makeChart'\r\n\r\nexport default ({ isOpen,data }) => {\r\n    useEffect(() => {\r\n            if(isOpen)\r\n                respiratoryChart('deaths-chart', getChartLineData(data),{xTitle:'תאריך',yTitle:'כמות נפטרים',chartTitle:'נפטרים - שינוי יומי', toolTipPostfix:'נפטרים'})\r\n            else \r\n            respiratoryChart('deaths-chart', [])\r\n        \r\n    }, [isOpen])\r\n    const getChartLineData = (people) => {\r\n        let day = moment('02/03/2020','DD/MM/YYYY');\r\n        const end = moment().clone();\r\n        const result = [];\r\n        let count = 0;\r\n    \r\n        while (day.isSameOrBefore(end)) {         \r\n          people.forEach(person => {      \r\n            if (person.statuses.some((status) => { \r\n              \r\n               \r\n                return status.name === 'נפטר' && (moment(status.createdAt).startOf('day').isSame(day.startOf('day')))\r\n          \r\n            }))\r\n            {\r\n              count++;\r\n            }\r\n          });\r\n          result.push({ x: day.clone().format('D.M').toString(), y:count });\r\n          day.add('1','day')\r\n        }\r\n        return result   \r\n      }\r\n    \r\n\r\n    \r\n\r\n\r\n    return (\r\n    <div id=\"respiratory-chart-container\" className={`small-chart-container ${isOpen ? 'open' : ''}`}>\r\n    <canvas id=\"deaths-chart\" ></canvas>\r\n    </div>)\r\n\r\n}","C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\components\\charts\\PositiveTestsChart.js",["136","137"],"import React, { useEffect } from 'react'\r\nimport moment from 'moment';\r\n\r\nimport respiratoryChart from '../../charts/makeChart'\r\n\r\nexport default ({ isOpen,data }) => {\r\n    useEffect(() => {\r\n            if(isOpen)\r\n                respiratoryChart('Positive-test-chart', getChartLineData(data),{xTitle:'תאריך',yTitle:'מספר בדיקות יומיות',chartTitle:'בדיקות - מגמת שינוי יומית',toolTipPostfix:'בדיקות'})\r\n            else \r\n            respiratoryChart('Positive-test-chart', [])\r\n        \r\n    }, [isOpen])\r\n    const getChartLineData = (people) => {\r\n        let day = moment('01/01/2020','DD/MM/YYYY');\r\n        const end = moment().clone();\r\n        const result = [];\r\n      \r\n        while (day.isSameOrBefore(end)) {  \r\n            let count = 0;\r\n          people.forEach(person => {      \r\n            person.statuses.forEach((status) => { \r\n              \r\n                if ((moment(status.createdAt).startOf('day').isSame(day.startOf('day')) && status.name === 'נבדק'))\r\n                    count++;\r\n            })\r\n          });\r\n        \r\n          result.push({ x: day.clone().format('D.M').toString(), y:count });\r\n          day.add('1','day')\r\n        }\r\n        return result   \r\n      }\r\n    \r\n\r\n    \r\n\r\n\r\n    return (\r\n    <div id=\"respiratory-chart-container\" className={`small-chart-container ${isOpen ? 'open' : ''}`}>\r\n    <canvas id=\"Positive-test-chart\" ></canvas>\r\n    </div>)\r\n\r\n}","C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\components\\StaticsRow.js",["138"],"import React,{useState,useEffect} from 'react'\r\nimport DeathsChart from './charts/DeathsChart'\r\nimport PositiveTestsChart from './charts/PositiveTestsChart'\r\nimport RespiratoryChart from './charts/respiratoryChart'\r\nimport {getGeneralStatics} from '../server/data'\r\nexport default () => {\r\n    const chartsName={respiratory:'respiratory',deaths:'deaths',positiveTests:'positiveTests'}\r\n    const [data, setData] = useState()\r\n    const [selectedChartOpen,setSelectedChartOpen]=useState()\r\n    useEffect(() => {\r\n        getGeneralStatics().then((value) => {          \r\n           setData(value)\r\n                  })\r\n      },[])\r\n    const getInfoTag = (textHtml) => {\r\n        return (\r\n          <div className=\"info-container\">\r\n            <i className=\"fas fa-info-circle\"></i>\r\n            <div className=\"info-text\" dangerouslySetInnerHTML={{__html:textHtml}}></div>\r\n        </div>)\r\n      }\r\n      \r\n      return (\r\n        <div className=\"flex-row center general-statics-container\">\r\n          <div className=\"general-statics\">\r\n          <div className=\"static-square\">\r\n            <div className=\"title\">מאומתים חדשים אתמול {getInfoTag(`<p>סך הנדבקים בנגיף COVID-19 בישראל שאותרו משעה 00:00 עד שעה 23:59 של יום אתמול</p>\r\n    \r\n            <p>מאומת-כל מי שנבדק ונמצא חיובי לנגיף COVID-19, בים אם הופיעו אצלו תסמינים ובין אם לא, בים אם הוא חולה, החלים או נפטר</p>`) }</div>\r\n              <div className=\"static-prime-data\">{data?data.verifiedSick.fromYesterdayVerifiedUntilNow.length:'Not available'}</div>\r\n              <div className=\"static-sub-data\"><strong>{data?data.verifiedSick.fromMidnightUntilNow.length:'Not available'}+</strong> מחצות</div>\r\n              <div className=\"static-sub-data\"><strong>{data?data.verifiedSick.allTimesCount:'Not available' }</strong> סה\"כ</div>\r\n          </div>\r\n          <div className=\"static-square\">\r\n            <div className=\"title\">חולים פעילים {getInfoTag(`<p>חולה פעיל - כל מי שנבדק ונמצא חיובי לנגיף COVID-19, ללא קשר להופעת תסמינים, שטרם הוגדר כמחלים ושלא נפטר</p>`) }</div>\r\n              <div className=\"static-prime-data\">{data?data.sickPeople.allCurrentSick.length:'Not available' }</div>\r\n              <div className=\"static-sub-data\"><strong>{data?data.sickPeople.fromMidnightUntilNow.length:'Not available' }+</strong> מחצות</div>\r\n            <div className=\"static-bottom-data flex-row\">\r\n              <div className=\"detail-box\">\r\n                <div className=\"detail-title\">בית / קהילה</div>\r\n                  <div className=\"detail-content\"><strong>{ data?data.sickPeople.locationsCount.home:'Not available' }</strong></div>\r\n              </div>\r\n              <div className=\"detail-box\">\r\n              <div className=\"detail-title\">מלון</div>\r\n              <div className=\"detail-content\"><strong>{ data?data.sickPeople.locationsCount.hotels:'Not available' }</strong></div>\r\n              </div>\r\n              <div className=\"detail-box\">\r\n              <div className=\"detail-title\">בי\"ח</div>\r\n              <div className=\"detail-content\"><strong>{ data?data.sickPeople.locationsCount.hospitals:'Not available' }</strong></div>\r\n            </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"static-square\">\r\n            <div className=\"title\">חולים קשים {getInfoTag(`<p>סך החולים במצב קשה וקריטי כפי שהוגדרו ע\"י מערכת הבריאות, המאושפזים בבתי החולים</p>`) }</div>\r\n              <div className=\"static-prime-data\">{data?data.sickPeople.SeriouslyIll.length:'Not available'}</div>\r\n            <div className=\"static-sub-data\"><strong>{data?data.sickPeople.SeriouslyIllSinceMidnight:'Not available' }</strong> מחצות</div>\r\n            <div className=\"static-bottom-data flex-column\">\r\n              <div className=\"detail-line\">\r\n                <div className=\"detail-content\"><span className=\"circle redpink-bg\"></span>מתוכם קריטי <strong>{data?data.sickPeople.SeriouslyIll.filter(person=>person.statuses[person.statuses.length-1].detail==='קריטי').length:''}</strong></div>\r\n              </div>\r\n              <div className=\"detail-line\">\r\n             \r\n                  <div className=\"detail-content\"><div className=\"circle yellow-bg\"></div>בינוני <strong>{data?data.sickPeople.mediumIll.length:'' }</strong></div>\r\n              </div>\r\n              \r\n            </div>\r\n          </div>\r\n          <div className={`static-square ${selectedChartOpen===chartsName.respiratory?'selected':''}`}>\r\n            <div className=\"title\">מונשמים{getInfoTag(`<p>סך החולים בנגיף COVID-19 המחוברים למכונת הנשמה בבתי חולים</p>`) }</div>\r\n              <div className=\"static-prime-data\">{data?data.respiratory.allRespiratoryData.length:'' }</div>\r\n            <div className=\"static-sub-data\"><strong>{data?data.respiratory.changeTodayAndMidnight:'' }</strong> מחצות</div>\r\n            <div className=\"static-bottom-data\">\r\n              <div className=\"detail-chart-title\">\r\n                <p><i onClick={() => {setSelectedChartOpen(selectedChartOpen===chartsName.respiratory?'':chartsName.respiratory)\r\n                }} class=\"fas fa-signal\"></i>מגמת שינוי יומית</p>\r\n                <RespiratoryChart  isOpen={selectedChartOpen===chartsName.respiratory} data={data?data.respiratory.allRespiratoryData:[]} ></RespiratoryChart>\r\n                \r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className={`static-square ${selectedChartOpen===chartsName.deaths?'selected':''}`}>\r\n            <div className=\"title\">נפטרים מצטבר{getInfoTag(`<p>סך הנפטרים מנגיף covid-19 בישראל, החל מפרוץ המגפה</p>`) }</div>\r\n              <div className=\"static-prime-data\">{data?data.deathsData.length:'' }</div>\r\n            <div className=\"static-sub-data\"> </div>\r\n            <div className=\"static-bottom-data\">\r\n              <div className=\"detail-chart-title\">\r\n                <p id=\"death-chart-icon\"><i onClick={() => {\r\n                 \r\n                  setSelectedChartOpen(selectedChartOpen===chartsName.deaths?'':chartsName.deaths)\r\n               \r\n                  \r\n                }} class=\"fas fa-signal\"></i>מגמת שינוי יומית</p>\r\n                <DeathsChart  isOpen={selectedChartOpen===chartsName.deaths}  data={data?data.deathsData:[]}></DeathsChart>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className={`static-square ${selectedChartOpen===chartsName.positiveTests?'selected':''}`}>\r\n            <div className=\"title\">אחוז בדיקות חיוביות אתמול{getInfoTag(`<p>אחוז הבדיקות החיוביות מתוך סך הבדיקות לגילוי הנגיף בפעם הראשונה לכל נבדק. שתוצאותיהן התקבלו משעה : עד שעה : של יום אתמול</p><p>בדיקות אתמול - מספר תוצאות של בדיקות, הן לבדיקה לזיהוי ראשוני של הנגיף והן לבדיקה נלוות לקביעת החלמה, שהתקבלו החל מחצות : עד שעה : של יום אתמול</p>`) }</div>\r\n              <div className=\"static-prime-data\">%{data?data.testsData.percentPositiveYesterday:'N/A' }</div>\r\n            <div className=\"static-sub-data\"><strong>%{data?data.testsData.percentPositiveToday:'N/A' }</strong> מחצות</div>\r\n            <div className=\"static-bottom-data\">\r\n              <div className=\"detail-chart-title\">\r\n                <p><i onClick={() => {\r\n                    setSelectedChartOpen(selectedChartOpen === chartsName.positiveTests ? '' : chartsName.positiveTests)\r\n                  }} class=\"fas fa-signal\"></i>מגמת שינוי יומית</p>\r\n                <PositiveTestsChart  isOpen={selectedChartOpen===chartsName.positiveTests}data={data?data.deathsData:[]}></PositiveTestsChart>\r\n                \r\n              </div>\r\n            </div>\r\n            </div>\r\n            </div>\r\n     \r\n        </div>\r\n      );\r\n}","C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\components\\charts\\VerifiedAvgWeekly.js",["139","140","141","142","143"],"import React, { useEffect, useState } from 'react'\r\nimport Chart from 'chart.js'\r\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\r\nimport axios from 'axios';\r\nimport { getChangesAndDoubleFactorPerWeek } from '../../server/data'\r\nimport respiratoryChart from '../../charts/makeChart'\r\nChart.plugins.unregister(ChartDataLabels);\r\nexport default () => {\r\n    \r\n\r\n    useEffect(() => {\r\n        let ctx = document.getElementById('verified-avg-chart');\r\n        let gradient = ctx.getContext('2d').createLinearGradient(0, 0, 0, 500);\r\n    \r\n        gradient.addColorStop(0, 'rgba(83, 204, 253, 1)');\r\n        gradient.addColorStop(0.25, 'rgba(204, 243, 246, 0.5)');\r\n        gradient.addColorStop(0.35, 'rgba(0, 0, 0, 0)');\r\n        gradient.addColorStop(0.5, 'rgba(0, 0, 0, 0)');\r\n        gradient.addColorStop(1, 'rgba(0, 0, 0, 0)');\r\n        getChangesAndDoubleFactorPerWeek().then(value => {\r\n            var myChart = new Chart('verified-avg-chart', {\r\n                plugins:[ChartDataLabels],\r\n                type: 'line',\r\n                data: {\r\n                  \r\n                    datasets: [{\r\n                        label: {\r\n                          \r\n                        },\r\n                        data: value.length > 0 ? value.map(data => data.avgChangeByWeek) : undefined,\r\n                        \r\n                        backgroundColor:\r\n                            gradient\r\n                        ,\r\n                        borderColor:\r\n                            '#53ccfd'\r\n                        ,\r\n                        borderWidth: 5,\r\n                        pointRadius: 0,\r\n                      \r\n                    },\r\n                        {\r\n                     \r\n                        type: 'bubble',\r\n                        label: {\r\n                        \r\n                        },\r\n                        data: value.length > 0 ? value.map(data => data.avgChangeByWeek) : undefined,\r\n                      \r\n                        backgroundColor:\r\n                            gradient\r\n                        ,\r\n                        borderColor:\r\n                            '#53ccfd'\r\n                        ,\r\n                        borderWidth: 5,\r\n                        pointRadius: 0,\r\n                        \r\n                    }\r\n                    ]\r\n                },\r\n                options: {\r\n                    responsive: true,\r\n                    maintainAspectRatio: false,\r\n                    title: {\r\n                        display: true,\r\n                        text:  '',\r\n               \r\n                    \r\n                    },\r\n                    legend: {\r\n                    \r\n                        display: false,\r\n                    },\r\n                    scales: {\r\n                    \r\n                        xAxes: [{\r\n                            \r\n                            labels: value.map(data => data.day),\r\n                            scaleLabel: {\r\n                                display: true,\r\n                                labelString: '',\r\n                                fontSize: 15,\r\n                            },\r\n                            gridLines: {\r\n                                display:false\r\n                            }\r\n                        }],\r\n                        yAxes: [{\r\n                            labels: value.map(data => data.avgChangeByWeek),\r\n                            scaleLabel: {\r\n                                display: true,\r\n                                labelString: 'אחוז שינוי יומי',\r\n                                fontSize: 15,\r\n                            },\r\n                            ticks: {\r\n                              \r\n                                maxTicksLimit: 5,\r\n                                callback: (value) => {\r\n                                    return value+\"%\"\r\n                                }\r\n                            },\r\n                            gridLines: {\r\n                                display:false\r\n                            }\r\n                            \r\n                            \r\n                        }]\r\n                    },\r\n                    tooltips: {\r\n                        enabled:false\r\n                    },\r\n                    layout: {\r\n                        \r\n                        padding: {\r\n                            top: 20,\r\n                            right:25\r\n                     }  \r\n                   },\r\n                    plugins: {\r\n                        datalabels: {\r\n                            clamp:false,\r\n                            display:'auto',\r\n                            textAlign:'center',\r\n                            align:'top',\r\n                            formatter: (text,context)=> {\r\n                                return `${text}% \\n (${value[context.dataIndex].daysToDoubleSickPeople})`\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n            })\r\n        }\r\n                \r\n        )\r\n        \r\n    }, [])\r\n   \r\n    \r\n\r\n    \r\n\r\n\r\n    return (\r\n    <div id=\"verified-avg-chart-container\" className={`medium-chart-container `}  style={{ position: 'relative',width:35+'vw'}}>\r\n    <canvas id=\"verified-avg-chart\" ></canvas>\r\n    </div>)\r\n\r\n}","C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\components\\charts\\SeriouslyIllWeek.js",["144","145"],"import React, { useEffect } from 'react'\r\nimport Chart from 'chart.js'\r\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\r\n\r\nimport {  getSeriouslyIllWeek } from '../../server/data'\r\n\r\nChart.plugins.unregister(ChartDataLabels);\r\nexport default () => {\r\n    \r\n\r\n    useEffect(() => {\r\n        let ctx = document.getElementById('seriously-ill-chart');\r\n        let gradient = ctx.getContext('2d').createLinearGradient(0, 0, 0, 500);\r\n    \r\n        gradient.addColorStop(0, 'rgba(104, 169, 169, 1)');\r\n        gradient.addColorStop(0.25, 'rgba(167, 205, 206, 0.5)');\r\n        gradient.addColorStop(0.35, 'rgba(0, 0, 0, 0)');\r\n        gradient.addColorStop(0.5, 'rgba(0, 0, 0, 0)');\r\n        gradient.addColorStop(1, 'rgba(0, 0, 0, 0)');\r\n        getSeriouslyIllWeek().then(value => {\r\n            var myChart = new Chart('seriously-ill-chart', {\r\n                plugins:[ChartDataLabels],\r\n                type: 'line',\r\n                data: {\r\n                  \r\n                    datasets: [{\r\n                        label: {\r\n                          \r\n                        },\r\n                        data: value.length > 0 ? value.map(data => data.count) : undefined,\r\n                        \r\n                        backgroundColor:\r\n                            gradient\r\n                        ,\r\n                        borderColor:\r\n                            'rgba(104, 169, 169, 1)'\r\n                        ,\r\n                        borderWidth: 5,\r\n                        pointRadius: 0,\r\n                      \r\n                    },\r\n                        {\r\n                     \r\n                        type: 'bubble',\r\n                        label: {\r\n                        \r\n                        },\r\n                        data: value.length > 0 ? value.map(data => data.count) : undefined,\r\n                      \r\n                        backgroundColor:\r\n                            gradient\r\n                        ,\r\n                        borderColor:\r\n                            'rgba(104, 169, 169, 1)'\r\n                        ,\r\n                        borderWidth: 5,\r\n                        pointRadius: 0,\r\n                        \r\n                    }\r\n                    ]\r\n                },\r\n                options: {\r\n                    \r\n                    responsive: true,\r\n                    maintainAspectRatio: false,\r\n                    title: {\r\n                        display: true,\r\n                        text:  '',\r\n               \r\n                    \r\n                    },\r\n                    legend: {\r\n                    \r\n                        display: false,\r\n                    },\r\n                    scales: {\r\n                       \r\n                        xAxes: [{\r\n                            \r\n                            labels: value.map(data => data.day),\r\n                            scaleLabel: {\r\n                                display: true,\r\n                                labelString: '',\r\n                                fontSize: 15,\r\n                            },\r\n                            gridLines: {\r\n                                display:false\r\n                            }\r\n                        }],\r\n                        yAxes: [{\r\n                            labels: value.map(data => data.count),\r\n                            scaleLabel: {\r\n                                display: true,\r\n                                labelString: '',\r\n                                fontSize: 15,\r\n                            },\r\n                            ticks: {\r\n                              \r\n                                maxTicksLimit: 5,\r\n                                \r\n                            },\r\n                            gridLines: {\r\n                                display:false\r\n                            }\r\n                            \r\n                        }]\r\n                    },\r\n                    tooltips: {\r\n                        enabled:false\r\n                    },\r\n                    layout: {\r\n                        \r\n                        padding: {\r\n                            top: 20,\r\n                            right:25\r\n                     }  \r\n                   },\r\n                    plugins: {\r\n                        datalabels: {\r\n                            clamp:false,\r\n                            display:'auto',\r\n                            textAlign:'center',\r\n                            align:'top',\r\n                            \r\n                        }\r\n                    }\r\n                }\r\n\r\n            })\r\n        }\r\n                \r\n        )\r\n        \r\n    }, [])\r\n   \r\n    \r\n\r\n    \r\n\r\n\r\n    return (\r\n    <div id=\"seriously-ill-chart-container\" className={`medium-chart-container `}  style={{ position: 'relative',width:20+'vw'}}>\r\n    <canvas id=\"seriously-ill-chart\" ></canvas>\r\n    </div>)\r\n\r\n}","C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\components\\charts\\VerifiedOutSideRedZone.js",["146","147","148","149","150","151","152"],"import React, { useEffect, useState } from 'react'\r\nimport Chart from 'chart.js'\r\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\r\nimport axios from 'axios';\r\nimport { getVerifiedOutsideRedZone } from '../../server/data'\r\nimport respiratoryChart from '../../charts/makeChart'\r\nChart.plugins.unregister(ChartDataLabels);\r\nexport default () => {\r\n    \r\n\r\n    useEffect(() => {\r\n        let ctx = document.getElementById('verified-outside-red-chart');\r\n        getVerifiedOutsideRedZone().then(value => {\r\n            var myChart = new Chart('verified-outside-red-chart', {\r\n                plugins:[ChartDataLabels],\r\n                type: 'bar',\r\n                data: {\r\n                  \r\n                    datasets: [{\r\n                        label: {\r\n                          \r\n                        },\r\n                        data: value.length > 0 ? value.map(data => data.count) : undefined,\r\n                        \r\n                        borderColor:\r\n                            '#b8cb56'\r\n                        ,\r\n                        backgroundColor: '#b8cb56',\r\n                        borderWidth: 0,\r\n                        borderWidth:1,\r\n                        pointRadius: 0,\r\n                        barThickness:10,\r\n                      \r\n                    }\r\n                    ]\r\n                },\r\n                options: {\r\n                    responsive: true,\r\n                    maintainAspectRatio: false,\r\n                    title: {\r\n                        display: true,\r\n                        text:  '',\r\n               \r\n                    \r\n                    },\r\n                    legend: {\r\n                    \r\n                        display: false,\r\n                    },\r\n                    scales: {\r\n                    \r\n                        xAxes: [{\r\n                            \r\n                            labels: value.map(data => data.day),\r\n                            scaleLabel: {\r\n                                display: true,\r\n                                labelString: '',\r\n                                fontSize: 15,\r\n                            },\r\n                            gridLines: {\r\n                                display:false\r\n                            }\r\n                        }],\r\n                        yAxes: [{\r\n                            labels: value.map(data => data.count),\r\n                            scaleLabel: {\r\n                                display: true,\r\n                                labelString: '',\r\n                                fontSize: 15,\r\n                            },\r\n                            ticks: {\r\n                              \r\n                                maxTicksLimit: 5,\r\n                               \r\n                            },\r\n                            gridLines: {\r\n                                display:false\r\n                            }\r\n                            \r\n                            \r\n                        }]\r\n                    },\r\n                    tooltips: {\r\n                        enabled:false\r\n                    },\r\n                    layout: {\r\n                        \r\n                        padding: {\r\n                            top: 20,\r\n                            right:25\r\n                     }  \r\n                   },\r\n                    plugins: {\r\n                        datalabels: {\r\n                            clamp:false,\r\n                            display: 'auto',\r\n                            offset:65,\r\n                            textAlign:'center',\r\n                            align:'top',\r\n                           \r\n                        }\r\n                    }\r\n                }\r\n\r\n            })\r\n        }\r\n                \r\n        )\r\n        \r\n    }, [])\r\n   \r\n    \r\n\r\n    \r\n\r\n\r\n    return (\r\n    <div id=\"verified-outside-red-chart-container\" className={`medium-chart-container `} style={{ position: 'relative',width:35+'vw'}}>\r\n    <canvas id=\"verified-outside-red-chart\" ></canvas>\r\n    </div>)\r\n\r\n}","C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\components\\WeeklyCharts.js",["153"],"import React from 'react'\r\nimport VerifiedAvgWeekly from './charts/VerifiedAvgWeekly'\r\nimport SeriouslyIllWeek from './charts/SeriouslyIllWeek'\r\nimport VerifiedOutSideRedZone from './charts/VerifiedOutSideRedZone'\r\nimport LookupTag from './LookupTag'\r\nexport default () => {\r\n   return ( <div className=\"spread-weekly\">\r\n        <h1 className=\"title\">מדדי התפשטות בהסתכלות שבועית</h1>\r\n        <div className=\"weekly-charts-container\">\r\n          <div className=\"weekly-chart-container\">\r\n            <h3>מגמת שינוי במאומתים חדשים וקצב הכפלה</h3>\r\n            <LookupTag text='% שינוי בממוצע מאמתים חדשים שבועי, ומספר הימים להכפלת הנדבקים (בסוגריים)' isInfo={true}/>\r\n          <VerifiedAvgWeekly/>\r\n          </div>\r\n          <div className=\"weekly-chart-container flex-shrink-1\">\r\n            <h3>מספר החולים קשה וקריטי</h3>\r\n            <SeriouslyIllWeek/>\r\n          </div>\r\n          <div className=\"weekly-chart-container\">\r\n            <h3>מספר המאומתים החדשים מחוץ לאזורי ההתפשטות</h3>\r\n            <LookupTag text='הנתונים אינם כוללים מאומתים מישובים אדומים, מוסדות גריאטריים וחוזרים מחו\"ל'isInfo={true} />\r\n            <VerifiedOutSideRedZone/>\r\n          </div>\r\n        </div>\r\n      </div>)\r\n}","C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\components\\LookupTag.js",["154"],"import React from 'react'\r\n\r\n\r\nexport default ({text,isInfo}) => {\r\n    return (\r\n    <div className=\"lookup\">\r\n     {isInfo? <i class=\"fas fa-info-circle\"></i>:<i class=\"far fa-lightbulb\"></i>}\r\n        <div className=\"lookup-text\">{text||''}</div>\r\n    </div>)\r\n  }\r\n","C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\components\\charts\\EpidemicCurveChart.js",["155","156"],"import React,{useEffect,useState} from 'react'\r\nimport { getEpidemicCurve } from '../../server/data'\r\nimport Chart from 'chart.js'\r\nimport moment from 'moment'\r\nimport LookupTag from '../LookupTag'\r\n\r\nimport CustomSelect from '../CustomSelect'\r\n\r\nimport { getEnlightenmentVerifiedDoubleFromNow } from '../../server/data'\r\n\r\nexport default () => {\r\n    const [daysDoubledVerified,setDaysDoubleVerified]=useState(0)\r\n\r\n    const [startDate, setStartDate] = useState(moment().subtract(2, 'weeks').toDate());\r\n    useEffect(() => {\r\n        getEnlightenmentVerifiedDoubleFromNow().then(value=>setDaysDoubleVerified(value))\r\n      },[])\r\n    useEffect(() => {\r\n        const isTwoLinesChart = startDate && moment().diff(moment(startDate), 'days') > 80 ;\r\n\r\n        let ctx = document.getElementById('epidemic-curve-chart');\r\n        let gradient = ctx.getContext('2d').createLinearGradient(0, 0, 0, 500);\r\n \r\n        gradient.addColorStop(0, 'rgba(83, 204, 253, 1)');\r\n        gradient.addColorStop(0.25, 'rgba(204, 243, 246, 0.5)');\r\n        gradient.addColorStop(1, 'rgba(0, 0, 0, 0)');\r\n        getEpidemicCurve(startDate).then((value) => {            \r\n            var myChart = new Chart('epidemic-curve-chart', {\r\n           \r\n                type: 'line',\r\n                data: {\r\n                  \r\n                    datasets: [{\r\n                        type: 'line',\r\n                        label: 'מאומתים מצטבר',\r\n                        yAxisID:'verified-all',\r\n                        data: value.length > 0 ? value.map(data => data.verifiedUntilDate) : undefined,\r\n                        \r\n                        backgroundColor:\r\n                            gradient\r\n                        ,\r\n                        borderColor:\r\n                            '#53ccfd'\r\n                        ,\r\n                        borderWidth: 5,\r\n                        pointRadius: 0,\r\n                        \r\n                    },\r\n                    {\r\n                     \r\n                        type: isTwoLinesChart?'line':'bar',\r\n                        label: 'מחלימים חדשים',\r\n                        data: value.length > 0 ? value.map(data => data.recoverOnDate) : undefined,\r\n                      \r\n                        backgroundColor:\r\n                            '#898989'\r\n                        ,\r\n                        borderColor:\r\n                            '#898989'\r\n                        ,\r\n                        borderWidth: 5,\r\n                        pointRadius: 0,\r\n                        \r\n                        },\r\n                        {\r\n                     \r\n                            type: 'bar',\r\n                            yAxisID:'new-cases',\r\n                            label: 'מאומתים חדשים',\r\n                            data: value.length > 0 ? value.map(data => data.verifiedOnDate) : undefined,\r\n                          \r\n                            backgroundColor:\r\n                                '#1c7d7e'\r\n                            ,\r\n                            borderColor:\r\n                                '#1c7d7e'\r\n                            ,\r\n                            borderWidth: 5,\r\n                            pointRadius: 0,\r\n                            \r\n                        }\r\n                    ]\r\n                },\r\n                options: {\r\n                    responsive: true,\r\n                    maintainAspectRatio: false,\r\n                    title: {\r\n                        display: true,\r\n                        text: '',\r\n               \r\n                    \r\n                    },\r\n                    legend: {\r\n                        align: 'start',\r\n                        rtl: true,\r\n                        \r\n                        onClick: (e) => e.stopPropagation(),\r\n                        labels: {\r\n                            usePointStyle: true,\r\n                            // fontSize: 7,\r\n                            boxWidth: 6\r\n                            \r\n                        },\r\n                        \r\n                    },\r\n                    scales: {\r\n                    \r\n                        xAxes: [{\r\n                            \r\n                            labels: value.map(data => data.day),\r\n                            scaleLabel: {\r\n                                display: true,\r\n                                labelString: 'תאריך הבדיקה',\r\n                                fontSize: 15,\r\n                            },\r\n                            ticks: {\r\n                                maxTicksLimit:19,\r\n                            },\r\n                            gridLines: {\r\n                                display: false\r\n                            }\r\n                        }],\r\n                        yAxes: [{\r\n                            id: 'verified-all',\r\n                            position: 'left',\r\n                            labels: value.map(data => data.verifiedUntilDate),\r\n                            scaleLabel: {\r\n                                display: true,\r\n                                labelString: 'מספר מקרים מצטבר',\r\n                                fontSize: 15,\r\n\r\n                            },\r\n                            ticks: {\r\n                                \r\n                                maxTicksLimit: 5,\r\n                              \r\n                            },\r\n                            gridLines: {\r\n                                display: true\r\n                            }\r\n                            \r\n                            \r\n                        }, {\r\n                            id: 'new-cases',\r\n                            position: 'right',\r\n                            labels: value.map(data => data.verifiedOnDate),\r\n                            scaleLabel: {\r\n                                display: true,\r\n                                labelString: 'מספר מקרים חדשים',\r\n                                fontSize: 15,\r\n                                \r\n                            },\r\n                            ticks: {\r\n                              \r\n                                maxTicksLimit: 5,\r\n                           \r\n                            },\r\n                            gridLines: {\r\n                                display: true\r\n                            }\r\n                            \r\n                            \r\n                        }]\r\n                    },\r\n                    tooltips: {\r\n                        mode:'index',\r\n                      intersect:true,\r\n                    },\r\n                    layout: {\r\n                        \r\n                        padding: {\r\n                            top: 20,\r\n                            right: 25\r\n                        }\r\n                    },\r\n                   \r\n                }\r\n                })\r\n        \r\n        })\r\n\r\n    })\r\n    return (\r\n        <div className=\"epidemic-chart-container\">\r\n        <div className=\"title-filter-wrapper\">\r\n          <h3>עקומה אפידמית</h3>\r\n          <CustomSelect\r\n            id=\"epidemic-curve-date-select\"\r\n            onChange={(selected) => setStartDate(selected)}\r\n            optionsArray={[{ value: moment('20/3/2020', 'DD/M/YYYY').toDate(), text: \"עד עכשיו\" },\r\n                           { value: moment().subtract(1, 'week').toDate(), text:\"שבוע אחרון\" },\r\n                           {isDefault:true, value: moment().subtract(2, 'weeks').toDate(), text: 'שבועיים אחרונים' },\r\n                           {value:moment().subtract(1,'month').toDate(),text:'חודש אחרון'}\r\n                                        ]} />\r\n        </div>\r\n        <LookupTag text={`'מספר הנדבקים היום הינו כפול מהמספר לפני ${daysDoubledVerified} ימים'`} isInfo={false} />\r\n        \r\n        <div className=\"large-chart-container\">\r\n        <canvas id=\"epidemic-curve-chart\">\r\n          \r\n        </canvas>\r\n      </div>\r\n        </div>\r\n        \r\n    )\r\n}","C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\components\\CustomSelect.js",["157","158"],"import React,{useState,useEffect} from 'react'\r\n\r\nexport default ({optionsArray,id,onChange}) => {\r\n    \r\n    const [selectedOption,setSelectedOption]=useState(optionsArray.find(option => option.isDefault))\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    useEffect(() => {\r\n        onChange(selectedOption.value)\r\n    },[selectedOption])\r\n\r\n    return (\r\n        <div className=\"custom-select-wrapper\"\r\n            onClick={() => setIsOpen(!isOpen)}>\r\n            <div className=\"current-value\">\r\n                <i class={`fas fa-chevron-down ${isOpen?'rotateUp':''}`}></i>\r\n                {selectedOption.text||'none'}\r\n                </div>\r\n        <div className=\"custom-select\"\r\n           \r\n            name={`${id}-time`}\r\n            id={id}>\r\n            \r\n            <div className={`options-container ${isOpen?'open':''}`}>\r\n            {optionsArray.map((option) =>\r\n                <div\r\n                    className={`custom-option ${option.text===selectedOption.text?'selected':''}`}\r\n                    onClick={()=>setSelectedOption(option)}>{option.text}</div>)}\r\n            </div>\r\n   \r\n        </div>\r\n    </div>)\r\n}","C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\components\\charts\\SeriouslyIllChart.js",["159","160","161","162"],"import React,{useEffect,useState} from 'react'\r\nimport { getEpidemicCurve, getSeriouslyIllAndRespiratoryUntilNow,getEnlightenmentSeriouslyIllUntilNow } from '../../server/data'\r\nimport Chart from 'chart.js'\r\nimport moment from 'moment'\r\nimport LookupTag from '../LookupTag'\r\n\r\nimport CustomSelect from '../CustomSelect'\r\n\r\n\r\nexport default () => {\r\n    const [noteData,setNoteData]=useState()\r\n\r\n    const [startDate, setStartDate] = useState(moment().subtract(2, 'weeks').toDate());\r\n    useEffect(() => {\r\n        getEnlightenmentSeriouslyIllUntilNow().then(value=>setNoteData(value))\r\n      },[])\r\n    useEffect(() => {\r\n        const isTwoLinesChart = startDate && moment().diff(moment(startDate), 'days') > 80 ;\r\n\r\n        // let ctx = document.getElementById('seriously-ill-and-respiratory-chart');\r\n        // let gradient = ctx.getContext('2d').createLinearGradient(0, 0, 0, 500);\r\n        // gradient.addColorStop(0, 'rgba(83, 204, 253, 1)');\r\n        // gradient.addColorStop(0.25, 'rgba(204, 243, 246, 0.5)');\r\n        // gradient.addColorStop(1, 'rgba(0, 0, 0, 0)');\r\n        getSeriouslyIllAndRespiratoryUntilNow(startDate).then((value) => {            \r\n            var myChart = new Chart('seriously-ill-and-respiratory-chart', {\r\n           \r\n                type: 'line',\r\n                data: {\r\n                    datasets: [\r\n                        {\r\n                     \r\n                            type: 'line',\r\n                            label: 'חולים קשים',\r\n                            data: value.length > 0 ? value.map(data => data.seriouslyIllOnDate) : undefined,\r\n                            backgroundColor:'transparent',\r\n                            borderColor:\r\n                                '#b6ca51'\r\n                            ,\r\n                            borderWidth: 5,\r\n                            pointRadius: 0,\r\n                            \r\n                            },{\r\n                        type: 'line',\r\n                            label: 'מונשמים',\r\n                            backgroundColor:'transparent',\r\n                        \r\n                        data:value&& value.length > 0 ? value.map(data => data.respiratoryOnDate) : undefined,\r\n                        \r\n                      \r\n                        borderColor:\r\n                            '#50cbfd'\r\n                        ,\r\n                        borderWidth: 5,\r\n                        pointRadius: 0,\r\n                        \r\n                    },\r\n                   \r\n                        {\r\n                     \r\n                            type: 'bubble',\r\n                            \r\n                            label: {},\r\n                            data: value.length > 0 ? value.map(data => data.respiratoryOnDate) : undefined,\r\n                        \r\n                      \r\n                            borderColor:\r\n                                '#50cbfd'\r\n                            ,\r\n                            borderWidth: 5,\r\n                            pointRadius: 0,\r\n                            \r\n                        },\r\n                        {\r\n                     \r\n                            type: 'bubble',\r\n                            label: false,\r\n                            data: value.length > 0 ? value.map(data => data.seriouslyIllOnDate) : undefined,\r\n                      \r\n                            borderColor:\r\n                                '#b6ca51'\r\n                            ,\r\n                            borderWidth: 5,\r\n                            pointRadius: 0,\r\n                            \r\n                        }\r\n                    ]\r\n                },\r\n                options: {\r\n                    responsive: true,\r\n                    maintainAspectRatio: false,\r\n                    title: {\r\n                        display: true,\r\n                        text: '',\r\n               \r\n                    \r\n                    },\r\n                    legend: {\r\n                        align: 'start',\r\n                        rtl: true,\r\n                        \r\n                        onClick: (e) => e.stopPropagation(),\r\n                        labels: {\r\n                            usePointStyle: true,\r\n                            // fontSize: 7,\r\n                            boxWidth: 6,\r\n                            filter: (item, chart)=>{\r\n                                return item.datasetIndex!==2&&item.datasetIndex!==3\r\n                            }\r\n                            \r\n                        },\r\n                        \r\n                    },\r\n                    scales: {\r\n                    \r\n                        xAxes: [{\r\n                            \r\n                            labels: value.map(data => data.day),\r\n                            scaleLabel: {\r\n                                display: true,\r\n                                labelString: 'תאריך הבדיקה',\r\n                                fontSize: 15,\r\n                            },\r\n                            ticks: {\r\n                                maxTicksLimit:19,\r\n                            },\r\n                            gridLines: {\r\n                                display: false\r\n                            }\r\n                        }],\r\n                        yAxes: [{\r\n                            id: 'verified-all',\r\n                            position: 'left',\r\n                            labels: value.map(data => data.verifiedUntilDate),\r\n                            scaleLabel: {\r\n                                display: true,\r\n                                labelString: 'מספר מקרים מצטבר',\r\n                                fontSize: 15,\r\n\r\n                            },\r\n                            ticks: {\r\n                                \r\n                                maxTicksLimit: 5,\r\n                              \r\n                            },\r\n                            gridLines: {\r\n                                display: true\r\n                            }\r\n                            \r\n                            \r\n                        }\r\n                            \r\n                            \r\n                        ]\r\n                    },\r\n                    tooltips: {\r\n                        mode:'index',\r\n                      intersect:true,\r\n                    },\r\n                    layout: {\r\n                        \r\n                        padding: {\r\n                            top: 20,\r\n                            right: 25\r\n                        }\r\n                    },\r\n                   \r\n                }\r\n                })\r\n        \r\n        })\r\n\r\n    })\r\n    return (\r\n        <div className=\"seriously-ill-and-respiratory-chart-container\">\r\n        <div className=\"title-filter-wrapper\">\r\n        <h3>חולים קשה ומונשמים</h3>\r\n          <CustomSelect\r\n            id=\"seriously-ill-and-respiratory-date-select\"\r\n            onChange={(selected) => setStartDate(selected)}\r\n            optionsArray={[{ value: moment('20/3/2020', 'DD/M/YYYY').toDate(), text: \"עד עכשיו\" },\r\n                           { value: moment().subtract(1, 'week').toDate(), text:\"שבוע אחרון\" },\r\n                           { value: moment().subtract(2, 'weeks').toDate(), text: 'שבועיים אחרונים' },\r\n                           {isDefault:true,value:moment().subtract(1,'month').toDate(),text:'חודש אחרון'}\r\n                                        ]} />\r\n        </div>\r\n        <LookupTag text={`סה\"כ ${noteData?noteData.seriouslyIllData:''} חולים קשה ו - ${noteData?noteData.respiratoryData:''} מונשמים מאז תחילת המשבר (מרץ 2020) `} isInfo={false} />\r\n        \r\n        <div className=\"large-chart-container\">\r\n        <canvas id=\"seriously-ill-and-respiratory-chart\">\r\n          \r\n        </canvas>\r\n      </div>\r\n        </div>\r\n        \r\n    )\r\n}","C:\\Users\\david\\Documents\\Talpiot_hi_tech\\React\\covid-19-dashboard\\covid19-dashboard\\src\\components\\CitiesByColor.js",["163"],{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","severity":1,"message":"169","line":2,"column":10,"nodeType":"170","messageId":"171","endLine":2,"endColumn":14},{"ruleId":"172","severity":1,"message":"173","line":11,"column":1,"nodeType":"174","endLine":30,"endColumn":2},{"ruleId":"172","severity":1,"message":"173","line":4,"column":1,"nodeType":"174","endLine":27,"endColumn":2},{"ruleId":"175","severity":1,"message":"176","line":16,"column":13,"nodeType":"177","endLine":16,"endColumn":46},{"ruleId":"172","severity":1,"message":"173","line":4,"column":1,"nodeType":"174","endLine":26,"endColumn":2},{"ruleId":"178","severity":1,"message":"179","line":9,"column":17,"nodeType":"177","endLine":9,"endColumn":130},{"ruleId":"178","severity":1,"message":"179","line":21,"column":17,"nodeType":"177","endLine":21,"endColumn":130},{"ruleId":"178","severity":1,"message":"179","line":22,"column":17,"nodeType":"177","endLine":22,"endColumn":130},{"ruleId":"178","severity":1,"message":"179","line":23,"column":17,"nodeType":"177","endLine":23,"endColumn":130},{"ruleId":"168","severity":1,"message":"180","line":1,"column":8,"nodeType":"170","messageId":"171","endLine":1,"endColumn":20},{"ruleId":"168","severity":1,"message":"181","line":2,"column":17,"nodeType":"170","messageId":"171","endLine":2,"endColumn":27},{"ruleId":"168","severity":1,"message":"182","line":2,"column":29,"nodeType":"170","messageId":"171","endLine":2,"endColumn":38},{"ruleId":"168","severity":1,"message":"183","line":7,"column":8,"nodeType":"170","messageId":"171","endLine":7,"endColumn":17},{"ruleId":"168","severity":1,"message":"184","line":8,"column":18,"nodeType":"170","messageId":"171","endLine":8,"endColumn":24},{"ruleId":"168","severity":1,"message":"185","line":10,"column":8,"nodeType":"170","messageId":"171","endLine":10,"endColumn":20},{"ruleId":"172","severity":1,"message":"173","line":13,"column":1,"nodeType":"174","endLine":31,"endColumn":2},{"ruleId":"168","severity":1,"message":"186","line":16,"column":10,"nodeType":"170","messageId":"171","endLine":16,"endColumn":19},{"ruleId":"168","severity":1,"message":"187","line":16,"column":21,"nodeType":"170","messageId":"171","endLine":16,"endColumn":33},{"ruleId":"168","severity":1,"message":"188","line":3,"column":10,"nodeType":"170","messageId":"171","endLine":3,"endColumn":27},{"ruleId":"172","severity":1,"message":"173","line":6,"column":1,"nodeType":"174","endLine":49,"endColumn":2},{"ruleId":"189","severity":1,"message":"190","line":37,"column":8,"nodeType":"191","endLine":37,"endColumn":16,"suggestions":"192"},{"ruleId":"172","severity":1,"message":"173","line":9,"column":1,"nodeType":"174","endLine":115,"endColumn":2},{"ruleId":"168","severity":1,"message":"193","line":17,"column":7,"nodeType":"170","messageId":"171","endLine":17,"endColumn":14},{"ruleId":"168","severity":1,"message":"188","line":3,"column":10,"nodeType":"170","messageId":"171","endLine":3,"endColumn":27},{"ruleId":"172","severity":1,"message":"173","line":6,"column":1,"nodeType":"174","endLine":47,"endColumn":2},{"ruleId":"189","severity":1,"message":"190","line":13,"column":8,"nodeType":"191","endLine":13,"endColumn":16,"suggestions":"194"},{"ruleId":"195","severity":1,"message":"196","line":21,"column":26,"nodeType":"197","messageId":"198","endLine":31,"endColumn":12},{"ruleId":"172","severity":1,"message":"173","line":6,"column":1,"nodeType":"174","endLine":44,"endColumn":2},{"ruleId":"189","severity":1,"message":"190","line":13,"column":8,"nodeType":"191","endLine":13,"endColumn":16,"suggestions":"199"},{"ruleId":"172","severity":1,"message":"173","line":6,"column":1,"nodeType":"174","endLine":115,"endColumn":2},{"ruleId":"168","severity":1,"message":"200","line":1,"column":28,"nodeType":"170","messageId":"171","endLine":1,"endColumn":36},{"ruleId":"168","severity":1,"message":"201","line":4,"column":8,"nodeType":"170","messageId":"171","endLine":4,"endColumn":13},{"ruleId":"168","severity":1,"message":"202","line":6,"column":8,"nodeType":"170","messageId":"171","endLine":6,"endColumn":24},{"ruleId":"172","severity":1,"message":"173","line":8,"column":1,"nodeType":"174","endLine":150,"endColumn":2},{"ruleId":"168","severity":1,"message":"193","line":21,"column":17,"nodeType":"170","messageId":"171","endLine":21,"endColumn":24},{"ruleId":"172","severity":1,"message":"173","line":8,"column":1,"nodeType":"174","endLine":146,"endColumn":2},{"ruleId":"168","severity":1,"message":"193","line":21,"column":17,"nodeType":"170","messageId":"171","endLine":21,"endColumn":24},{"ruleId":"168","severity":1,"message":"200","line":1,"column":28,"nodeType":"170","messageId":"171","endLine":1,"endColumn":36},{"ruleId":"168","severity":1,"message":"201","line":4,"column":8,"nodeType":"170","messageId":"171","endLine":4,"endColumn":13},{"ruleId":"168","severity":1,"message":"202","line":6,"column":8,"nodeType":"170","messageId":"171","endLine":6,"endColumn":24},{"ruleId":"172","severity":1,"message":"173","line":8,"column":1,"nodeType":"174","endLine":122,"endColumn":2},{"ruleId":"168","severity":1,"message":"203","line":12,"column":13,"nodeType":"170","messageId":"171","endLine":12,"endColumn":16},{"ruleId":"168","severity":1,"message":"193","line":14,"column":17,"nodeType":"170","messageId":"171","endLine":14,"endColumn":24},{"ruleId":"204","severity":1,"message":"205","line":30,"column":25,"nodeType":"206","messageId":"207","endLine":30,"endColumn":36},{"ruleId":"172","severity":1,"message":"173","line":6,"column":1,"nodeType":"174","endLine":26,"endColumn":2},{"ruleId":"172","severity":1,"message":"173","line":4,"column":1,"nodeType":"174","endLine":10,"endColumn":4},{"ruleId":"172","severity":1,"message":"173","line":11,"column":1,"nodeType":"174","endLine":206,"endColumn":2},{"ruleId":"168","severity":1,"message":"193","line":28,"column":17,"nodeType":"170","messageId":"171","endLine":28,"endColumn":24},{"ruleId":"172","severity":1,"message":"173","line":3,"column":1,"nodeType":"174","endLine":32,"endColumn":2},{"ruleId":"189","severity":1,"message":"208","line":9,"column":7,"nodeType":"191","endLine":9,"endColumn":23,"suggestions":"209"},{"ruleId":"168","severity":1,"message":"210","line":2,"column":10,"nodeType":"170","messageId":"171","endLine":2,"endColumn":26},{"ruleId":"172","severity":1,"message":"173","line":10,"column":1,"nodeType":"174","endLine":197,"endColumn":2},{"ruleId":"168","severity":1,"message":"211","line":18,"column":15,"nodeType":"170","messageId":"171","endLine":18,"endColumn":30},{"ruleId":"168","severity":1,"message":"193","line":26,"column":17,"nodeType":"170","messageId":"171","endLine":26,"endColumn":24},{"ruleId":"172","severity":1,"message":"173","line":5,"column":1,"nodeType":"174","endLine":64,"endColumn":2},"no-native-reassign",["212"],"no-negated-in-lhs",["213"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'themeContext' is defined but never used.","'useContext' is defined but never used.","'useEffect' is defined but never used.","'LookupTag' is defined but never used.","'months' is defined but never used.","'CustomSelect' is defined but never used.","'startDate' is assigned a value but never used.","'setStartDate' is assigned a value but never used.","'getGeneralStatics' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.","ArrayExpression",["214"],"'myChart' is assigned a value but never used.",["215"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'count'.","ArrowFunctionExpression","unsafeRefs",["216"],"'useState' is defined but never used.","'axios' is defined but never used.","'respiratoryChart' is defined but never used.","'ctx' is assigned a value but never used.","no-dupe-keys","Duplicate key 'borderWidth'.","ObjectExpression","unexpected","React Hook useEffect has a missing dependency: 'onChange'. Either include it or remove the dependency array. If 'onChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["217"],"'getEpidemicCurve' is defined but never used.","'isTwoLinesChart' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"218","fix":"219"},{"desc":"218","fix":"220"},{"desc":"218","fix":"221"},{"desc":"222","fix":"223"},"Update the dependencies array to be: [data, isOpen]",{"range":"224","text":"225"},{"range":"226","text":"225"},{"range":"227","text":"225"},"Update the dependencies array to be: [onChange, selectedOption]",{"range":"228","text":"229"},[1420,1428],"[data, isOpen]",[430,438],[499,507],[326,342],"[onChange, selectedOption]"]